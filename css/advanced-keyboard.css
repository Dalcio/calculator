main.advanced-keyboard {
  display: grid;
  gap: 3px;
  grid-template-columns: repeat(10, minmax(46px, 1fr));
  grid-template-rows: repeat(6, 46px);
  grid-template-areas:
    "conversions conversions conversions conversions conversions conversions conversions conversions conversions conversions" /* row nº 1 */
    "subscript superscript scientific-exponent module-divide undo clear-display square cos sin tan" /* row nº 2 */
    "number-7 number-8 number-9 division left-angle-bracket right-angle-bracket percentage sinh cosh tanh" /* row nº 3 */
    "number-4 number-5 number-6 multiply memory memory inverse factorial absolute-value complex-argument" /* row nº 4 */
    "number-1 number-2 number-3 subtract pi euler exponent square-root logarithm natural-logarithm" /* row nº 5 */
    "number-0 dot imaginary add equal factorize real-component imaginary-component complex-conjugate additional-functions" /* row nº 6 */;
}

.conversions {
  grid-area: conversions;
}

.subscript {
  grid-area: subscript;
}

.superscript {
  grid-area: superscript;
}

.scientific-exponent {
  grid-area: scientific-exponent;
}

.module-divide {
  grid-area: module-divide;
}

.division {
  grid-area: division;
}

.sin {
  grid-area: sin;
}

.cos {
  grid-area: cos;
}

.tan {
  grid-area: tan;
}

.sinh {
  grid-area: sinh;
}

.cosh {
  grid-area: cosh;
}

.tanh {
  grid-area: tanh;
}

.memory {
  grid-area: memory;
  display: grid;
  grid-template-columns: 1fr auto;
  align-items: center;
  padding-right: 8px;
}

.inverse {
  grid-area: inverse;
}

.factorial {
  grid-area: factorial;
}

.absolute-value {
  grid-area: absolute-value;
}

.complex-argument {
  grid-area: complex-argument;
}

.pi {
  grid-area: pi;
}

.euler {
  grid-area: euler;
}

.exponent {
  grid-area: exponent;
}

.logarithm {
  grid-area: logarithm;
}

.natural-logarithm {
  grid-area: natural-logarithm;
}

.imaginary {
  grid-area: imaginary;
}

.factorize {
  grid-area: factorize;
}

.real-component {
  grid-area: real-component;
}

.imaginary-component {
  grid-area: imaginary-component;
}

.complex-conjugate {
  grid-area: complex-conjugate;
}

.additional-functions {
  grid-area: additional-functions;
}
